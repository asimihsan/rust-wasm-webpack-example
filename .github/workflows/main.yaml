name: "Test Suite"
on:
  push:
  pull_request:

jobs:
  test-rust:
    name: test-rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: wasm32-unknown-unknown
      - run: cargo test
        working-directory: ./rust

  build-rust-wasm-bindgen:
    name: build-rust-wasm-bindgen
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: wasm32-unknown-unknown
      - run: cargo build --release --target wasm32-unknown-unknown
        working-directory: ./rust-wasm-bindgen

  rust-formatting:
    name: rust-formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Ensure rustfmt is installed and setup problem matcher
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - name: Rustfmt Check rust
        uses: actions-rust-lang/rustfmt@v1
        with:
          manifest-path: ./rust/Cargo.toml
      - name: Rustfmt Check rust-wasm-bindgen
        uses: actions-rust-lang/rustfmt@v1
        with:
          manifest-path: ./rust-wasm-bindgen/Cargo.toml

  build-test-web:
    name: build-test-web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: wasm32-unknown-unknown
      - run: cargo build --release --target wasm32-unknown-unknown
        working-directory: ./rust-wasm-bindgen
      - uses: actions/setup-node@v2
        with:
          node-version: '18'
      - run: npm install
        working-directory: ./web
      - run: npm run build
        working-directory: ./web
      - uses: actions/checkout@v2
        with:
          repository: puppeteer/puppeteer
          path: puppeteer
      - run: npm install
        working-directory: ./puppeteer
